# DO NOT EDIT! This file is generated automatically!

__HEADER([Josef Kubin], [2019/12/11], [root_cz])
___DESCR([(this is a generated file) associative memory to linking references, contains captions and ID])
___POINT([linking links and simple database])

# A ‚Üí Œ≤
define([intro.mc.cs.capt], [Generov√°n√≠ k√≥du v M4: √∫vod])
define([intro.mc.cs.anch], [generovani-kodu-v-m4-uvod])
define([1.cs.capt], [Generov√°n√≠ k√≥du v M4: √∫vod])
define([1.cs.anch], [generovani-kodu-v-m4-uvod])
define([#.cs.Generov√°n√≠ k√≥du v M4: √∫vod], [1])

define([fundamentals.mc.cs.capt], [Generov√°n√≠ k√≥du v M4: z√°klady])
define([fundamentals.mc.cs.anch], [generovani-kodu-v-m4-zaklady])
define([2.cs.capt], [Generov√°n√≠ k√≥du v M4: z√°klady])
define([2.cs.anch], [generovani-kodu-v-m4-zaklady])
define([#.cs.Generov√°n√≠ k√≥du v M4: z√°klady], [2])

# A ‚Üí Œ≤
define([intro.mc.cs.anch.√övod], [uvod])
define([intro.mc.cs.uniq.√övod])
define([intro.mc.cs.anch.what_is_the_series_about], [what-is-the-series-about])
define([intro.mc.cs.anch.P≈ô√≠klady pro ƒçten√°≈ôe], [priklady-pro-ctenare])
define([intro.mc.cs.uniq.P≈ô√≠klady pro ƒçten√°≈ôe])
define([intro.mc.cs.anch.Historie makro jazyk≈Ø], [historie-makro-jazyku])
define([intro.mc.cs.uniq.Historie makro jazyk≈Ø])
define([intro.mc.cs.anch.GPM (General Purpose Macro-generator)], [gpm-general-purpose-macro-genera])
define([intro.mc.cs.uniq.GPM (General Purpose Macro-generator)])
define([intro.mc.cs.anch.M3], [m3])
define([intro.mc.cs.uniq.M3])
define([intro.mc.cs.anch.M4], [m4])
define([intro.mc.cs.uniq.M4])
define([intro.mc.cs.anch.the_authors], [the-authors])
define([intro.mc.cs.anch.GNU M4], [gnu-m4])
define([intro.mc.cs.uniq.GNU M4])
define([intro.mc.cs.anch.install], [install])
define([intro.mc.cs.anch.Z√°klady jazyka M4], [zaklady-jazyka-m4])
define([intro.mc.cs.uniq.Z√°klady jazyka M4])
define([intro.mc.cs.capt.context_free_grammar], [Bezkontextov√° gramatika])
define([intro.mc.cs.anch.context_free_grammar], [bezkontextova-gramatika])
define([intro.mc.cs.uniq.Bezkontextov√° gramatika])
define([intro.mc.cs.capt.m4_rules], [P≈ôepisovac√≠ pravidla M4])
define([intro.mc.cs.anch.m4_rules], [prepisovaci-pravidla-m4])
define([intro.mc.cs.uniq.P≈ôepisovac√≠ pravidla M4])
define([intro.mc.cs.capt.expansion_control], [≈ò√≠zen√≠ expanze netermin√°l≈Ø])
define([intro.mc.cs.anch.expansion_control], [rizeni-expanze-neterminalu])
define([intro.mc.cs.uniq.≈ò√≠zen√≠ expanze netermin√°l≈Ø])
define([intro.mc.cs.capt.automata_descr], [Automaty])
define([intro.mc.cs.anch.automata_descr], [automaty])
define([intro.mc.cs.uniq.Automaty])
define([intro.mc.cs.capt.output_queues], [V√Ωstupn√≠ fronty])
define([intro.mc.cs.anch.output_queues], [vystupni-fronty])
define([intro.mc.cs.uniq.V√Ωstupn√≠ fronty])
define([intro.mc.cs.capt.main_uses_of_m4], [Hlavn√≠ pou≈æit√≠ M4])
define([intro.mc.cs.anch.main_uses_of_m4], [hlavni-pouziti-m4])
define([intro.mc.cs.uniq.Hlavn√≠ pou≈æit√≠ M4])
define([intro.mc.cs.capt.code_generation], [Generov√°n√≠ k√≥du])
define([intro.mc.cs.anch.code_generation], [generovani-kodu])
define([intro.mc.cs.uniq.Generov√°n√≠ k√≥du])
define([intro.mc.cs.anch.files_on_command_line], [files-on-command-line])
define([intro.mc.cs.capt.m4_as_preproc], [Preprocesor])
define([intro.mc.cs.anch.m4_as_preproc], [preprocesor])
define([intro.mc.cs.uniq.Preprocesor])
define([intro.mc.cs.anch.CODE_M4([`']) V√Ωchoz√≠ znaky], [ba-vychozi-znaky])
define([intro.mc.cs.uniq.CODE_M4([`']) V√Ωchoz√≠ znaky])
define([intro.mc.cs.anch.CODE_M4([[]]) Hranat√© z√°vorky], [hranate-zavorky])
define([intro.mc.cs.uniq.CODE_M4([[]]) Hranat√© z√°vorky])
define([intro.mc.cs.anch.CODE_M4([‚êÇ‚êÜ]) Netisknuteln√© znaky], [netisknutelne-znaky])
define([intro.mc.cs.uniq.CODE_M4([‚êÇ‚êÜ]) Netisknuteln√© znaky])
define([intro.mc.cs.anch.CODE_M4([‚ü¶‚üß]) UTF-8 znaky], [utf-8-znaky])
define([intro.mc.cs.uniq.CODE_M4([‚ü¶‚üß]) UTF-8 znaky])
define([intro.mc.cs.anch.Sm√≠≈°en√Ω re≈æim], [smiseny-rezim])
define([intro.mc.cs.uniq.Sm√≠≈°en√Ω re≈æim])
define([intro.mc.cs.capt.prerequisites_for_mastering], [P≈ôedpoklady pro zvl√°dnut√≠ M4])
define([intro.mc.cs.anch.prerequisites_for_mastering], [predpoklady-pro-zvladnuti-m4])
define([intro.mc.cs.uniq.P≈ôedpoklady pro zvl√°dnut√≠ M4])
define([intro.mc.cs.anch.Z√°klady gramatik], [zaklady-gramatik])
define([intro.mc.cs.uniq.Z√°klady gramatik])
define([intro.mc.cs.capt.formal_grammar_chomsky], [Form√°ln√≠ gramatika (Chomsk√©ho typu)])
define([intro.mc.cs.anch.formal_grammar_chomsky], [formalni-gramatika-chomskeho-typ])
define([intro.mc.cs.uniq.Form√°ln√≠ gramatika (Chomsk√©ho typu)])
define([intro.mc.cs.anch.Z√°klady automat≈Ø], [zaklady-automatu])
define([intro.mc.cs.uniq.Z√°klady automat≈Ø])
define([intro.mc.cs.capt.testing_automaton], [Testovac√≠ automat])
define([intro.mc.cs.anch.testing_automaton], [testovaci-automat])
define([intro.mc.cs.uniq.Testovac√≠ automat])
define([intro.mc.cs.anch.dfa_img], [dfa-img])
define([intro.mc.cs.capt.generating_automaton], [Generuj√≠c√≠ automat])
define([intro.mc.cs.anch.generating_automaton], [generujici-automat])
define([intro.mc.cs.uniq.Generuj√≠c√≠ automat])
define([intro.mc.cs.anch.(GNU) make], [gnu-make])
define([intro.mc.cs.uniq.(GNU) make])
define([intro.mc.cs.anch.Vim], [vim])
define([intro.mc.cs.uniq.Vim])
define([intro.mc.cs.anch.Talent a ƒças], [talent-a-cas])
define([intro.mc.cs.uniq.Talent a ƒças])
define([intro.mc.cs.capt.code_generation_examples], [P≈ô√≠klady generov√°n√≠ k√≥du])
define([intro.mc.cs.anch.code_generation_examples], [priklady-generovani-kodu])
define([intro.mc.cs.uniq.P≈ô√≠klady generov√°n√≠ k√≥du])
define([intro.mc.cs.capt.input_source_code], [CODE_M4([[]]) Vstupn√≠ zdrojov√Ω k√≥d])
define([intro.mc.cs.anch.input_source_code], [vstupni-zdrojovy-kod])
define([intro.mc.cs.uniq.CODE_M4([[]]) Vstupn√≠ zdrojov√Ω k√≥d])
define([intro.mc.cs.anch.CODE_M4([[]]) CSV ‚Äì nejjednodu≈°≈°√≠ p≈ô√≠klad], [csv-nejjednodussi-priklad])
define([intro.mc.cs.uniq.CODE_M4([[]]) CSV ‚Äì nejjednodu≈°≈°√≠ p≈ô√≠klad])
define([intro.mc.cs.anch.CODE_M4([[]]) CSV ‚Äì poƒç√≠tadlo], [csv-pocitadlo])
define([intro.mc.cs.uniq.CODE_M4([[]]) CSV ‚Äì poƒç√≠tadlo])
define([intro.mc.cs.anch.CODE([üí°], [jak se to dƒõl√°],, [cursor:help]) √öpravy speci√°ln√≠ch znak≈Ø], [upravy-specialnich-znaku])
define([intro.mc.cs.uniq.CODE([üí°], [jak se to dƒõl√°],, [cursor:help]) √öpravy speci√°ln√≠ch znak≈Ø])
define([intro.mc.cs.capt.modified_input_source_code], [Upraven√Ω vstupn√≠ k√≥d])
define([intro.mc.cs.anch.modified_input_source_code], [upraveny-vstupni-kod])
define([intro.mc.cs.uniq.Upraven√Ω vstupn√≠ k√≥d])
define([intro.mc.cs.anch.CODE_M4([[]]) conv_file XML[,] XSLT[,] HTML], [prevodni-soubor-pro-xml-xslt-htm])
define([intro.mc.cs.uniq.CODE_M4([[]]) conv_file XML[,] XSLT[,] HTML])
define([intro.mc.cs.anch.CODE_M4([[]]) conv_file C[,] JSON[,] INI: CODE([DQ()≈ôetƒõzec[]DQ()])], [prevodni-soubor-pro-c-json-ini-d])
define([intro.mc.cs.uniq.CODE_M4([[]]) conv_file C[,] JSON[,] INI: CODE([DQ()≈ôetƒõzec[]DQ()])])
define([intro.mc.cs.anch.CODE_M4([[]]) conv_file Bash: CODE([DQ()≈ôetƒõzec[]DQ()])], [prevodni-soubor-pro-bash-dreteze])
define([intro.mc.cs.uniq.CODE_M4([[]]) conv_file Bash: CODE([DQ()≈ôetƒõzec[]DQ()])])
define([intro.mc.cs.anch.CODE_M4([[]]) conv_file Bash: CODE([AP()≈ôetƒõzec[]AP()])], [prevodni-soubor-pro-bash-areteze])
define([intro.mc.cs.uniq.CODE_M4([[]]) conv_file Bash: CODE([AP()≈ôetƒõzec[]AP()])])
define([intro.mc.cs.anch.CODE_M4([[]]) conv_file CSV[,] M4 (vr√°t√≠ v≈°echny znaky zp√°tky)], [prevodni-soubor-pro-csv-m4-vrati])
define([intro.mc.cs.uniq.CODE_M4([[]]) conv_file CSV[,] M4 (vr√°t√≠ v≈°echny znaky zp√°tky)])
define([intro.mc.cs.anch.CODE_M4([[]]) C ‚Äì v√Ωstupn√≠ fronta], [c-vystupni-fronta])
define([intro.mc.cs.uniq.CODE_M4([[]]) C ‚Äì v√Ωstupn√≠ fronta])
define([intro.mc.cs.anch.CODE_M4([[]]) INI ‚Äì extern√≠ p≈ô√≠kaz], [ini-externi-prikaz])
define([intro.mc.cs.uniq.CODE_M4([[]]) INI ‚Äì extern√≠ p≈ô√≠kaz])
define([intro.mc.cs.anch.CODE_M4([[]]) .h ‚Äì hex poƒç√≠tadlo], [h-hex-pocitadlo])
define([intro.mc.cs.uniq.CODE_M4([[]]) .h ‚Äì hex poƒç√≠tadlo])
define([intro.mc.cs.capt.small_automaton], [CODE_M4([[]]) C ‚Äì mal√Ω automat])
define([intro.mc.cs.anch.small_automaton], [c-maly-automat])
define([intro.mc.cs.uniq.CODE_M4([[]]) C ‚Äì mal√Ω automat])
define([intro.mc.cs.anch.CODE_M4([[]]) C ‚Äì mal√Ω automat 2], [c-maly-automat-2])
define([intro.mc.cs.uniq.CODE_M4([[]]) C ‚Äì mal√Ω automat 2])
define([intro.mc.cs.capt.output_queues_html], [CODE_M4([[]]) HTML ‚Äì v√Ωstupn√≠ fronty])
define([intro.mc.cs.anch.output_queues_html], [html-vystupni-fronty])
define([intro.mc.cs.uniq.CODE_M4([[]]) HTML ‚Äì v√Ωstupn√≠ fronty])
define([intro.mc.cs.capt.branching_in_m4], [CODE_M4([[]]) Vƒõtven√≠ gramatikou])
define([intro.mc.cs.anch.branching_in_m4], [vetveni-gramatikou])
define([intro.mc.cs.uniq.CODE_M4([[]]) Vƒõtven√≠ gramatikou])
define([intro.mc.cs.capt.json_generating_automaton], [CODE_M4([[]]) JSON ‚Äì generuj√≠c√≠ automat])
define([intro.mc.cs.anch.json_generating_automaton], [json-generujici-automat])
define([intro.mc.cs.uniq.CODE_M4([[]]) JSON ‚Äì generuj√≠c√≠ automat])
define([intro.mc.cs.capt.json_branch], [CODE_M4([[]]) JSON ‚Äì pojmenovan√© fronty])
define([intro.mc.cs.anch.json_branch], [json-pojmenovane-fronty])
define([intro.mc.cs.uniq.CODE_M4([[]]) JSON ‚Äì pojmenovan√© fronty])
define([intro.mc.cs.anch.nonterminals_for_branches], [nonterminals-for-branches])
define([intro.mc.cs.capt.json_symbolic_queue_names], [CODE_M4([[]]) JSON ‚Äì generovan√© indexy front])
define([intro.mc.cs.anch.json_symbolic_queue_names], [json-generovane-indexy-front])
define([intro.mc.cs.uniq.CODE_M4([[]]) JSON ‚Äì generovan√© indexy front])
define([intro.mc.cs.anch.CODE_M4([[]]) INI ‚Äì nespojit√Ω index front], [ini-nespojity-index-front])
define([intro.mc.cs.uniq.CODE_M4([[]]) INI ‚Äì nespojit√Ω index front])
define([intro.mc.cs.anch.CODE_M4([[]]) XML ‚Äì sm√≠≈°en√© zpr√°vy], [xml-smisene-zpravy])
define([intro.mc.cs.uniq.CODE_M4([[]]) XML ‚Äì sm√≠≈°en√© zpr√°vy])
define([intro.mc.cs.anch.CODE_M4([[]]) XML ‚Äì oddƒõlen√© zpr√°vy], [xml-oddelene-zpravy])
define([intro.mc.cs.uniq.CODE_M4([[]]) XML ‚Äì oddƒõlen√© zpr√°vy])
define([intro.mc.cs.anch.CODE_M4([[]]) Bash CODE([CMD() echo []DQ()≈ôetƒõzec[]DQ()])], [bash-cmd-echo-dretezecd])
define([intro.mc.cs.uniq.CODE_M4([[]]) Bash CODE([CMD() echo []DQ()≈ôetƒõzec[]DQ()])])
define([intro.mc.cs.anch.CODE_M4([[]]) Bash CODE([CMD() echo '≈ôetƒõzec'])], [bash-cmd-echo-aretezeca])
define([intro.mc.cs.uniq.CODE_M4([[]]) Bash CODE([CMD() echo '≈ôetƒõzec'])])
define([intro.mc.cs.capt.preproc_examples], [P≈ô√≠klady preprocesoru])
define([intro.mc.cs.anch.preproc_examples], [priklady-preprocesoru])
define([intro.mc.cs.uniq.P≈ô√≠klady preprocesoru])
define([intro.mc.cs.capt.cpp_and_m4], [CODE_M4([`']) Preprocesor jazyka C[]NB()a[]NB()M4])
define([intro.mc.cs.anch.cpp_and_m4], [ba-preprocesor-jazyka-c-a-m4])
define([intro.mc.cs.uniq.CODE_M4([`']) Preprocesor jazyka C[]NB()a[]NB()M4])
define([intro.mc.cs.anch.CODE_M4([`']) CSS ‚Äì vlo≈æen√≠ souboru[,] koment√°≈ô], [ba-css-vlozeni-souboru-komentar])
define([intro.mc.cs.uniq.CODE_M4([`']) CSS ‚Äì vlo≈æen√≠ souboru[,] koment√°≈ô])
define([intro.mc.cs.capt.nprint_bash], [BO([CODE([‚êÇ‚êÜ])]) Bash ‚Äì netisknuteln√© znaky])
define([intro.mc.cs.anch.nprint_bash], [bash-netisknutelne-znaky])
define([intro.mc.cs.uniq.BO([CODE([‚êÇ‚êÜ])]) Bash ‚Äì netisknuteln√© znaky])
define([intro.mc.cs.capt.m4_on_examples], [M4 ‚Äì p≈ô√≠klady])
define([intro.mc.cs.anch.m4_on_examples], [m4-priklady])
define([intro.mc.cs.uniq.M4 ‚Äì p≈ô√≠klady])
define([intro.mc.cs.anch.CODE_M4([[]]) JSON ‚Äì lev√° z√°vorka CODE([LB()])], [json-leva-zavorka-b])
define([intro.mc.cs.uniq.CODE_M4([[]]) JSON ‚Äì lev√° z√°vorka CODE([LB()])])
define([intro.mc.cs.anch.CODE_M4([[]]) Bash ‚Äì poƒç√≠tadla], [bash-pocitadla])
define([intro.mc.cs.uniq.CODE_M4([[]]) Bash ‚Äì poƒç√≠tadla])
define([intro.mc.cs.capt.symbols_in_brackets], [CODE_M4([[]]) .h ‚Äì z√°vorky CODE_M4([[]])[,] CODE_M4([[,]])[,] CODE_M4([[#]])[,] CODE_M4([[dnl]])])
define([intro.mc.cs.anch.symbols_in_brackets], [h-zavorky-h-dnl])
define([intro.mc.cs.uniq.CODE_M4([[]]) .h ‚Äì z√°vorky CODE_M4([[]])[,] CODE_M4([[,]])[,] CODE_M4([[#]])[,] CODE_M4([[dnl]])])
define([intro.mc.cs.capt.safe_example], [CODE_M4([[]]) AWK ‚Äì p≈ô√≠klady bezpeƒçnƒõj≈°√≠ch maker])
define([intro.mc.cs.anch.safe_example], [awk-priklady-bezpecnejsich-maker])
define([intro.mc.cs.uniq.CODE_M4([[]]) AWK ‚Äì p≈ô√≠klady bezpeƒçnƒõj≈°√≠ch maker])
define([intro.mc.cs.capt.questions_and_answers], [Proƒç pou≈æ√≠vat M4 a[]NB()proƒç ne?])
define([intro.mc.cs.anch.questions_and_answers], [proc-pouzivat-m4-a-proc-ne])
define([intro.mc.cs.uniq.Proƒç pou≈æ√≠vat M4 a[]NB()proƒç ne?])
define([intro.mc.cs.capt.why_to_use_m4], [CODE([üëç]) Proƒç generovat k√≥d v[]NB()M4])
define([intro.mc.cs.anch.why_to_use_m4], [proc-generovat-kod-v-m4])
define([intro.mc.cs.uniq.CODE([üëç]) Proƒç generovat k√≥d v[]NB()M4])
define([intro.mc.cs.anch.direct_use_of_cfg], [direct-use-of-cfg])
define([intro.mc.cs.anch.direct_use_of_atm], [direct-use-of-atm])
define([intro.mc.cs.anch.direct_use_of_stacks], [direct-use-of-stacks])
define([intro.mc.cs.anch.direct_use_of_queues], [direct-use-of-queues])
define([intro.mc.cs.anch.significantly_faster_code_gener], [significantly-faster-code-gener])
define([intro.mc.cs.capt.why_not_use], [CODE([üëé]) Proƒç se vyhnout M4])
define([intro.mc.cs.anch.why_not_use], [proc-se-vyhnout-m4])
define([intro.mc.cs.uniq.CODE([üëé]) Proƒç se vyhnout M4])
define([intro.mc.cs.anch.low_level_language], [low-level-language])
define([intro.mc.cs.anch.forgotten_language], [forgotten-language])
define([intro.mc.cs.anch.unusual_language], [unusual-language])
define([intro.mc.cs.anch.experience_dependent], [experience-dependent])
define([intro.mc.cs.anch.hard_maintenance], [hard-maintenance])
define([fundamentals.mc.cs.anch.√övod], [uvod])
define([fundamentals.mc.cs.uniq.√övod])

# A ‚Üí Œ≤
define([cs.LANG_VERSION], [ƒåesk√° verze])
